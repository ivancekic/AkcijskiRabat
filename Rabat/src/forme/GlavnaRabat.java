/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package forme;

import Objekti.rabat;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Label;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.Connection;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFDataFormat;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;


/**
 *
 * @author ceka
 */
public class GlavnaRabat extends javax.swing.JFrame {

  private String konekcija;
  private String user;
  private String sifra;
  private static Connection connection;
  static Vector<String> tableHeaders = new Vector<String>();
  static Vector tableData = new Vector();
  private  ArrayList<rabat> lista;
 private static final String [] naziviKolonaHeader  = {"POSLOVNI PARTNER","PP NAZIV","PROIZVOD","PROIZVOD NAZIV","VAZI OD","VAZI DO","RABAT"};
  final static private String upitVazeci = "select a.poslovni_partner, pp.naziv, a.proizvod, p.naziv naziv_proizvoda, a.vazi_od, a.vazi_do, a.akc_rabat rabat \n" +
" from AKCIJSKI_RABAT a, poslovni_partner pp, proizvod p\n" +
" where a.poslovni_partner = pp.sifra and a.proizvod = p.sifra and trunc(VAZI_DO) >= to_date('%s','dd.mm.yyyy') \n" +
" order by vazi_od, a.poslovni_partner, a.proizvod";
  final static private String upitSvi = "select a.poslovni_partner, pp.naziv, a.proizvod, p.naziv naziv_proizvoda, a.vazi_od, a.vazi_do, a.akc_rabat rabat\n" +
" from AKCIJSKI_RABAT a, poslovni_partner pp, proizvod p\n" +
" where a.poslovni_partner = pp.sifra and a.proizvod = p.sifra  \n" +
" order by vazi_od, a.poslovni_partner, a.proizvod";
          
    public GlavnaRabat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabelLOGO = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldDanOD = new javax.swing.JTextField();
        jTextFieldMesecOd = new javax.swing.JTextField();
        jTextFieldGodinaOd = new javax.swing.JTextField();
        jTextFieldDanDo = new javax.swing.JTextField();
        jTextFieldMesecDo = new javax.swing.JTextField();
        jTextFieldGodinaDo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxKriterijum = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButtonUcitaj = new javax.swing.JButton();
        jLabelUkupno = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxFilter = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldFilter = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AKCIJSKI RABAT");
        setBackground(new java.awt.Color(153, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(204, 255, 255));

        jTable1.setBackground(new java.awt.Color(204, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Excell");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabelLOGO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/forme/albusLogo.jpg"))); // NOI18N

        jLabel4.setText("DAN");

        jLabel5.setText("MESEC");

        jLabel6.setText("GODINA");

        jLabel7.setText("OD:");

        jLabel8.setText("DAN");

        jButton3.setText("OD-DO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("MESEC");

        jLabel10.setText("GODINA");

        jLabel11.setText("DO:");

        jTextFieldGodinaDo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGodinaDoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldDanOD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMesecOd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldGodinaOd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDanDo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMesecDo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldGodinaDo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jLabelLOGO, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLOGO, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldDanOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldMesecOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldGodinaOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jTextFieldDanDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldMesecDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldGodinaDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jLabel1.setText("Kriterijum:");

        jButtonUcitaj.setText("Ucitaj");
        jButtonUcitaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUcitajActionPerformed(evt);
            }
        });

        jLabelUkupno.setText("Ukupno :");

        jLabel2.setText("Filter :");

        jLabel3.setText("=");

        jButton2.setText("Prikazi");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonUcitaj, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                    .addComponent(jTextFieldFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelUkupno, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUcitaj)
                    .addComponent(jLabelUkupno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
     this.setIconImage(new ImageIcon(getClass().getResource("albusLogo.jpg")).getImage());
     this.setBackground(Color.blue);
     lista = new ArrayList<>();

      jComboBoxKriterijum.removeAllItems();
      jComboBoxFilter.removeAllItems();
      jComboBoxFilter.addItem("SVE");
      jComboBoxFilter.addItem("PARTNER SIFRA");
      jComboBoxFilter.addItem("PARTNER NAZIV");
      jComboBoxFilter.addItem("PROIZVOD SIFRA");
      jComboBoxFilter.addItem("PROIZVOD NAZIV");
      jComboBoxFilter.addItem("VAZI OD");
      jComboBoxFilter.addItem("VAZI DO");
      jComboBoxFilter.addItem("RABAT");
      jComboBoxKriterijum.addItem("SVI");
      jComboBoxKriterijum.addItem("VAZECI RABAT");
      konekcija = "jdbc:oracle:thin:@albus-iis.invej.co.yu:1521:invej";
      user = "INVEJ";
      sifra = "pass";
      tableHeaders.removeAllElements();
      for (String heder : naziviKolonaHeader)
      {
          tableHeaders.add(heder);
      }
      jTable1.setModel(new DefaultTableModel(null, tableHeaders));
              try 
            {
        Class.forName("oracle.jdbc.OracleDriver");
               }
       catch(Exception ex) {
      System.out.println(ex);
      JOptionPane.showMessageDialog(null,"Nije moguce pronaci drajver za konekciju na bazu!Program ce se ugaisti!","GRESKA",0);
      System.exit(-1);
                        }
                  try { 
            connection = DriverManager.getConnection(konekcija,user,sifra);
        } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(null,"Nije moguce uspostaviti vezu sa bazom!Program ce se ugasiti!","GRESKA "+ex.getErrorCode(),0);
                 System.exit(-1);
        }
                  setExtendedState(GlavnaRabat.MAXIMIZED_BOTH);
                  jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    }//GEN-LAST:event_formWindowOpened
 
     public void napuniTabeluPoKriterijumu(String nazivAtributa,String vrednost) throws ParseException
     {
         DefaultTableModel model;
         DefaultTableModel noviModel;
         model = (DefaultTableModel) this.jTable1.getModel(); 
         noviModel = new DefaultTableModel(null, tableHeaders);
            tableData.removeAllElements();
            for (int i=0;i<model.getRowCount();i++)
            {
                int pom = jTable1.convertRowIndexToModel(i);
                model.removeRow(pom);    
            }
            jTable1.setModel(model);
            switch (nazivAtributa) {
            case "SVE":     
            for(int i =0;i<lista.size();i++)
                {
                    Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                }
             break; 
             case "PARTNER SIFRA":     
                for(int i =0;i<lista.size();i++)
                {
                    if (lista.get(i).getPoslovniPartnerSifra().equalsIgnoreCase(vrednost))
                    {
                    Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                    }
                }
             break;
                 case "PARTNER NAZIV":     
                for(int i =0;i<lista.size();i++)
                {
                    if (lista.get(i).getNazivPP().contains(vrednost))
                    {
                    Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                    }
                }
             break; 
             case "PROIZVOD SIFRA": 
               for(int i =0;i<lista.size();i++)
                {
                    if (lista.get(i).getProizvodSifra().equalsIgnoreCase(vrednost))
                    {
                   Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                    }
                }
             break; 
                  case "PROIZVOD NAZIV": 
               for(int i =0;i<lista.size();i++)
                {
                    if (lista.get(i).getNazivProizvoda().contains(vrednost))
                    {
                    Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                    }
                }
             break; 
               case "VAZI OD": 
               for(int i =0;i<lista.size();i++)
                {
                    if (lista.get(i).getVaziOD().equalsIgnoreCase(vrednost))
                    {
                   Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                    }
                }
             break; 
             case "VAZI DO": 
               for(int i =0;i<lista.size();i++)
                {
                    if (lista.get(i).getVaziDO().equalsIgnoreCase(vrednost))
                    {
                    Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                    }
                }
             break; 
             case "RABAT": 
               for(int i =0;i<lista.size();i++)
                {
                    if (lista.get(i).getRabat().equalsIgnoreCase(vrednost))
                    {
                    Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                    }
                }
             break; 
             case "OD-DO": 
               for(int i =0;i<lista.size();i++)
                {
                    DateFormat formatter ; 
                    Date datumOD,datumDO,datumLista ; 
                    formatter = new SimpleDateFormat("dd.MM.yyyy");
                    
               //     System.out.println("d "+datumPom);
                    datumOD =formatter.parse(jTextFieldDanOD.getText()+"."+jTextFieldMesecOd.getText()+"."+jTextFieldGodinaOd.getText());
                    datumDO =formatter.parse(jTextFieldDanDo.getText()+"."+jTextFieldMesecDo.getText()+"."+jTextFieldGodinaDo.getText());
                    
                    datumLista = formatter.parse(lista.get(i).getVaziDO());
             //       System.out.println("DATUM OD "+datumOD);
             //       System.out.println("DATUM DO "+datumDO);
            //        System.out.println("DATUM LISTA "+datumLista);
                    if (datumLista.after(datumOD) && datumLista.before(datumDO))
                    {
                    Vector<Object> oneRow = new Vector<>();
                    oneRow.add(lista.get(i).getPoslovniPartnerSifra());
                    oneRow.add(lista.get(i).getNazivPP());
                    oneRow.add(lista.get(i).getProizvodSifra());
                    oneRow.add(lista.get(i).getNazivProizvoda());
                    oneRow.add(lista.get(i).getVaziOD());
                    oneRow.add(lista.get(i).getVaziDO());
                    oneRow.add(lista.get(i).getRabat());
                    noviModel.addRow(oneRow);
                    }
                }
             break; 
         }
             jTable1.setModel(noviModel);
             jLabelUkupno.setText("Ukupno : "+noviModel.getRowCount());
        } 
    
    
   public void napraviExcel(String nazivFajla)
    {
         JFrame loading = load("Kreiranje....");
         try {
                    
                    HSSFWorkbook fWorkbook = new HSSFWorkbook();
                    HSSFSheet fSheet = fWorkbook.createSheet("Analiza cena");
                    HSSFFont sheetTitleFont = fWorkbook.createFont();
                    File dir = new File("Izvestaji");
                    if (!dir.exists())
                        {
                           dir.mkdir();
                        }
                    File f = new File(dir+"//"+nazivFajla);
                    File file = new File(dir+"//"+nazivFajla);
                    HSSFCellStyle cellStyle = fWorkbook.createCellStyle();
                    HSSFCellStyle cellBroj = fWorkbook.createCellStyle();
                  
                    sheetTitleFont.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
                //    cellStyle.setFont(sheetTitleFont);
                    //sheetTitleFont.setColor();
                    TableModel model = jTable1.getModel();
                    TableColumnModel tcm = jTable1.getColumnModel();
                    HSSFRow fRow = fSheet.createRow((short) 0);

                        for(int j = 0; j < tcm.getColumnCount(); j++) 
                        {
                             fSheet.autoSizeColumn(j,true);
                             HSSFCellStyle cellStyle1 = fWorkbook.createCellStyle();
                 
                             cellStyle1.setFont(sheetTitleFont);
                             HSSFCell cell = fRow.createCell((short) j);
                             cell.setCellStyle(cellStyle1);
                             cell.setCellValue(tcm.getColumn(j).getHeaderValue().toString());           
                        }
                        HSSFCellStyle style = fWorkbook.createCellStyle();
                        style.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.0000"));
                        for (int i = 0; i < model.getRowCount(); i++) {
                        fRow = fSheet.createRow((short) (i+1));
                        for (int j = 0; j < model.getColumnCount(); j++) {
                            HSSFCell cell = fRow.createCell((short) j);
                            String pom = "";
                            if (model.getValueAt(i,j) == null || model.getValueAt(i,j).toString().isEmpty())
                            {
                                pom = "";
                            }
                            else
                            {
                            if (j>5)
                                {    
                                  pom = model.getValueAt(i,j).toString();
                             //           System.out.println("TEMP '"+pom+"' red="+i+" kolona="+j);
                                  double temp = Double.parseDouble(pom);
                              //    temp = round(temp, 4);
                                  //      System.out.println("JESTE BROJ "+pom);  
                                  cell.setCellValue(temp);
                                  cell.setCellStyle(cellStyle);
                               }
                                else
                                {
                                  pom = model.getValueAt(i,j).toString();
                                  cell.setCellValue(pom);
                                  cell.setCellStyle(cellStyle);  
                                }
                            }
                        }

                    }
              for(int j = 0; j < model.getColumnCount(); j++) 
                 {
                     fSheet.autoSizeColumn(j);
                 }
                        
                FileOutputStream fileOutputStream;
                fileOutputStream = new FileOutputStream(file);
                BufferedOutputStream bos = new BufferedOutputStream(fileOutputStream);
                fWorkbook.write(bos);
                bos.close();
                fileOutputStream.close();

               JOptionPane.showMessageDialog(null,"Uspesno kreiran fajl "+nazivFajla,"INFORMACIJA",1);  
    }catch(NumberFormatException | IOException | HeadlessException e){
         //     e.printStackTrace();
        //      System.out.println(e);
              loading.dispose();
               JOptionPane.showMessageDialog(null,"Doslo je do greske prilikom kreiranja Excell fajla!","GRESKA EXCELL",0);
               System.out.println(e);
                  }
       loading.dispose();
    } 
    
    
    public JFrame load(String tekst)
    {
        JFrame loading = new JFrame();
        Container content = loading.getContentPane();
        Label tf = new Label(tekst);
        Font font1 = new Font("MF",Font.BOLD, 24);
        tf.setFont(font1);  
        tf.setPreferredSize(new Dimension(200,30));   // 200,30
        loading.getContentPane().add(tf);
        loading.pack();
        loading.setIconImage(new ImageIcon(getClass().getResource("albusLogo.jpg")).getImage());
        loading.setLocationRelativeTo(null);
        loading.enable(false);
        loading.setVisible(true);
        
        return loading;
    }
    public String popraviEncoding(String pom) throws UnsupportedEncodingException
    {
        byte[] bajt = pom.getBytes("latin1");
        String temp = new String(bajt,"CP1250");
        return temp;        
    }
    
    private void jButtonUcitajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUcitajActionPerformed
        String upit;
        tableData.removeAllElements();
        lista.clear();
        String datum = new SimpleDateFormat("dd.MM.yyyy").format(Calendar.getInstance().getTime());
  
        if (jComboBoxKriterijum.getSelectedItem().toString().equalsIgnoreCase("SVI"))
            upit = upitSvi;
        else
         upit = String.format(upitVazeci, datum);
         JFrame loading = load("Ucitavanje....");
        try
        {
            Statement st = connection.createStatement();
            ResultSet  rs;
            System.out.println(upit);
            rs = st.executeQuery(upit);
            int brojac = 1;
            while (rs.next())
            {
              //  System.out.println(brojac++);
                rabat r = new rabat();
                Vector<Object> oneRow = new Vector<>();
                r.setPoslovniPartnerSifra(popraviEncoding(rs.getString("POSLOVNI_PARTNER")));
                r.setNazivPP(popraviEncoding(rs.getString("NAZIV")));
                r.setProizvodSifra(popraviEncoding(rs.getString("PROIZVOD")));
                r.setNazivProizvoda(popraviEncoding(rs.getString("NAZIV_PROIZVODA")));
                Date od = rs.getDate("VAZI_OD");
            //    System.out.println("OD "+od);
                String datumPom = new SimpleDateFormat("dd.MM.yyyy").format(od);
                r.setVaziOD(datumPom);
                od  = rs.getDate("VAZI_DO");
                datumPom = new SimpleDateFormat("dd.MM.yyyy").format(od);
                r.setVaziDO(datumPom);
                r.setRabat(popraviEncoding(rs.getString("RABAT")));
                oneRow.add(r.getPoslovniPartnerSifra());
                oneRow.add(r.getNazivPP());
                oneRow.add(r.getProizvodSifra());
                oneRow.add(r.getNazivProizvoda());
                oneRow.add(r.getVaziOD());
                oneRow.add(r.getVaziDO());
                oneRow.add(r.getRabat());
                lista.add(r);
                tableData.add(oneRow);
            }
            
            jTable1.setModel(new DefaultTableModel(tableData, tableHeaders));
            
            loading.dispose();
            jLabelUkupno.setText("Ukupno : "+lista.size());
        }
        catch(Exception e)
        {
            loading.dispose();
        }
    }//GEN-LAST:event_jButtonUcitajActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String datum = new SimpleDateFormat("dd.MM.yyyy").format(Calendar.getInstance().getTime());
        napraviExcel("AkcijskiRabatNaDan_"+datum+"_"+jComboBoxKriterijum.getSelectedItem().toString()+".xls");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      try {
          napuniTabeluPoKriterijumu(jComboBoxFilter.getSelectedItem().toString(), jTextFieldFilter.getText());
      } catch (ParseException ex) {
          Logger.getLogger(GlavnaRabat.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      try {
          napuniTabeluPoKriterijumu("OD-DO", "");
      } catch (ParseException ex) {
          Logger.getLogger(GlavnaRabat.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldGodinaDoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGodinaDoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGodinaDoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavnaRabat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavnaRabat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavnaRabat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavnaRabat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlavnaRabat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonUcitaj;
    private javax.swing.JComboBox jComboBoxFilter;
    private javax.swing.JComboBox jComboBoxKriterijum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelLOGO;
    private javax.swing.JLabel jLabelUkupno;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldDanDo;
    private javax.swing.JTextField jTextFieldDanOD;
    private javax.swing.JTextField jTextFieldFilter;
    private javax.swing.JTextField jTextFieldGodinaDo;
    private javax.swing.JTextField jTextFieldGodinaOd;
    private javax.swing.JTextField jTextFieldMesecDo;
    private javax.swing.JTextField jTextFieldMesecOd;
    // End of variables declaration//GEN-END:variables
}
